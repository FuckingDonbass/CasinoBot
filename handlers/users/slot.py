from aiogram import types
# from keyboards.default import slot_menu
# from keyboards.default import main_menu
from states import Func, State
from loader import dp
import asyncio


@dp.message_handler(text="–ö—Ä—É—Ç–∏—Ç—å")
async def slot(message: types.Message):
    user_id = message.from_user.id
    user = Func.get_object(user_id)
    if user is None:
        await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É //start")
    elif user.state == State.Spin:
        return None
    else:
        if user.balance == 0:
            await message.answer("–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∏–≥—Ä—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å")
        elif user.bet < 1:
            await message.answer("–°—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1‚ÇΩ")
        elif user.bet > user.balance:
            await message.answer("–°—Ç–∞–≤–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º –∫–æ–ª-–≤–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á–µ—Ç—É!")
        else:
            dice = await message.answer_dice("üé∞")
            slot_value = dice.dice.value
            user.state = State.Spin
            if slot_value == 22 or slot_value == 43 or slot_value == 64 or slot_value == 1:
                win = user.bet * 15
                user.balance += win
                await asyncio.sleep(2)
                await message.answer(f"–ü–æ–∑–¥—Ä–∞–≤—è–ª–µ–º, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win} ‚ÇΩ\n–í–∞—à –±–∞–ª–∞–Ω—Å: {user.balance} ‚ÇΩ")
            else:
                user.balance -= user.bet
                await asyncio.sleep(2)
                await message.answer(f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {user.bet} ‚ÇΩ\n–í–∞—à –±–∞–ª–∞–Ω—Å: {user.balance} ‚ÇΩ")
            user.state = State.Play
